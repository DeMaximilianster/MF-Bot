# -*- coding: utf-8 -*-
from view.output import reply, send_photo, send_sticker, send
from presenter.config.config_func import time_replace, person_analyze
from presenter.config.database_lib import Database
from presenter.config.config_var import bot_id
from random import choice
from time import ctime, time
from presenter.config.log import Loger, log_to

log = Loger(log_to)


def helper(message):
    """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —á–µ–ª–æ–≤–µ–∫—É —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"""
    log.log_print(str(message.from_user.id)+": helper invoked")
    answer = '**–ö–æ–º–∞–Ω–¥—ã:**\n\n'
    answer += '/help - –ü—Ä–∏—Å—ã–ª–∞–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n'
    answer += "/id - –ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ ID'—à–Ω–∏–∫–∏, –∑–∞—á–∞—Å—Ç—É—é –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ\n"
    answer += '/minet - –î–µ–ª–∞–µ—Ç –ø—Ä–∏—è—Ç–Ω–æ\n'
    answer += '/drakken - –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –∞—Ä—Ç —Å –î–æ–∫—Ç–æ—Ä–æ–º –î—Ä–∞–∫–∫–µ–Ω–æ–º\n'
    answer += '/meme - –ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Ö–æ—Ä–æ—à–∏–π –º–µ–º\n'
    answer += '/me - –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –≤–∞—à—É –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n\n'

    answer += '/admin - –¢–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–∞–¥–º–∏–Ω–∞ –∏ –µ–≥–æ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è. –î–∞—ë—Ç —á–µ–ª–æ–≤–µ–∫—É –∞–¥–º–∏–Ω–∫—É\n'
    answer += '/unadmin - –¢–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–∞–¥–º–∏–Ω–∞ –∏ –µ–≥–æ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è. –ó–∞–±–∏—Ä–∞–µ—Ç —É —á–µ–ª–æ–≤–µ–∫–∞ –∞–¥–º–∏–Ω–∫—É\n'
    reply(message, answer, parse_mode='Markdown')


def show_id(message):
    """–ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ ID'—à–Ω–∏–∫–∏, –∑–∞—á–∞—Å—Ç—É—é –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ"""
    log.log_print(str(message.from_user.id)+": show_id invoked")
    answer = '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ` ' + ctime(message.date) + '`\n\n'
    answer += '–ü–µ—Ä–µ–≤–æ–¥—è, –≤—ã—Ö–æ–¥–∏—Ç: ` ' + str(time_replace(message.date)) + '`\n\n'
    answer += '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ` ' + ctime(time()) + '`\n\n'
    answer += 'ID —ç—Ç–æ–≥–æ —á–∞—Ç–∞: `' + str(message.chat.id) + '`\n\n'
    answer += '–í–∞—à ID: `' + str(message.from_user.id) + '`\n\n'
    answer += 'ID –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: `' + str(message.message_id) + '`\n\n'
    reply_msg = message.reply_to_message
    if reply_msg:  # –°–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º
        answer += 'ID —á–µ–ª–æ–≤–µ–∫–∞, –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∏–ª–∏: `' + str(reply_msg.from_user.id) + '`\n\n'
        answer += 'ID —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—Ç–∏–ª–∏: `' + str(reply_msg.message_id) + '`\n\n'
        if reply_msg.forward_from:  # –°–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—Ç–∏–ª–∏, —è–≤–ª—è–µ—Ç—Å—è —Ñ–æ—Ä–≤–∞—Ä–¥–æ–º
            answer += 'ID —á–µ–ª–æ–≤–µ–∫–∞, –Ω–∞–ø–∏—Å–∞–≤—à–µ–≥–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: `' + str(reply_msg.forward_from.id) + '`\n\n'
        elif reply_msg.forward_from_chat:  # –°–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—Ç–∏–ª–∏, —è–≤–ª—è–µ—Ç—Å—è —Ñ–æ—Ä–≤–∞—Ä–¥–æ–º –∏–∑ –∫–∞–Ω–∞–ª–∞
            answer += 'ID –∫–∞–Ω–∞–ª–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–µ—Å–ª–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ: `' + str(reply_msg.forward_from_chat.id) + '`\n\n'
        if reply_msg.sticker:
            answer += 'ID —Å—Ç–∏–∫–µ—Ä–∞: `' + reply_msg.sticker.file_id + '`\n\n'
            # answer += '–°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞–±–æ—Ä —Å —ç—Ç–∏–º —Å—Ç–∏–∫–µ—Ä–æ–º: https://telegram.me/addstickers/'
            # answer += reply_msg.sticker.set_name + '\n\n'
        elif reply_msg.photo:
            answer += 'ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ `' + reply_msg.photo[0].file_id + '`'
            for i in reply_msg.photo[1:]:
                answer += ',\n' + '`' + i.file_id + '`'
            answer += '\n\n'
        for media in (reply_msg.video, reply_msg.voice, reply_msg.video_note, reply_msg.audio, reply_msg.document):
            if media:
                answer += 'ID –º–µ–¥–∏–∞: `' + media.file_id + '`\n\n'
                break
    reply(message, answer, parse_mode='Markdown')


def minet(message):
    """–ü—Ä–∏–Ω–æ—Å–∏—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ"""
    log.log_print(str(message.from_user.id)+": minet invoked")
    way = choice(('text', 'sticker'))
    if way == 'text':
        rep = choice(('–æ–∞–æ–∞–æ–∞–æ–∞–æ–æ–∞ –º–º–º–º–º–º)))))', '–≠, –Ω–µ—Ç, —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è —Ç–µ–±—è', '–ü–æ–ø–∞ —á–∏—Å—Ç–∞—è?', '–ö—É—Å—å :3',
                      '–û—Ç–∫—Ä—ã–≤–∞–π —Ä–æ—Ç —Ç–æ–≥–¥–∞)', '–û, –¥–∞, —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–µ–±—è', 'üòèü§§', '–û–¥–Ω–∞ —Ñ–µ–ª–ª—è—Ü–∏—è\n–ù–∏–∫–∞–∫–æ–π —Ñ—Ä—É—Å—Ç—Ä–∞—Ü–∏–∏'))
        reply(message, rep)
    else:
        rep = choice(('CAADAgADWAADBoAqF4oogkZzHIvuFgQ',  # –£–ù–û-–∫–∞—Ä—Ç–æ—á–∫–∞
                      'CAADBAADqlUAAuOnXQVKqOJLAf4RYBYE',  # –û–ö
                      'CAADAgADewAD6J0qFmJL_8KisLg8FgQ',  # –ì–∞–º–ª–µ—Ç
                      'CAADAgADfAADq1fEC779DZWncMB2FgQ',  # –•–æ–Ω–∫–∞
                      'CAADAgADLQADb925FmFcbIKhK_3CFgQ',  # –ß—Ç–æ-—Ç–æ –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
                      'CAADAgADOAADb925FlKHKgxtlre-FgQ',  # –Ø —Å –π–æ–≥—É—Ä—Ç–æ–º
                      'CAADAgADGAADobczCKi7TanwsWyoFgQ',  # —Ö–æ–æ—à–æ
                      'CAADAgADTwEAAqfkvganUQktSzVbkRYE'  # –ò–Ω–∞–Ω–≥–∞–π
                      ))
        send_sticker(message.chat.id, rep, reply_to_message_id=message.message_id)


def send_drakken(message):
    """–ü—Ä–∏—Å—ã–ª–∞–µ—Ç –∞—Ä—Ç —Å –î–æ–∫—Ç–æ—Ä–æ–º –î—Ä–∞–∫–∫–µ–Ω–æ–º"""
    log.log_print(str(message.from_user.id)+": send_drakken invoked")
    drakken = choice(('AgADAgADpqsxG3J5-Urrn-mZkdvjs1SnhQ8ABAEAAwIAA20AA9QNBAABFgQ',
                      'AgADAgADtaoxG3L2eUns8mJ7X9gm893qtw8ABAEAAwIAA20AA-gnAQABFgQ',
                      'AgADAgAD8asxG4SzgUm_RXHcgE4jd26xUQ8ABAEAAwIAA20AAzHIBQABFgQ',
                      'AgADAgAD06wxG6uiUEkjcLfrDsigh339tw8ABAEAAwIAA20AA8f_AAIWBA',
                      'AgADAgAD36oxG0ImAUvzgBI4oR5C9J_RuQ8ABAEAAwIAA20AA9FGAQABFgQ',
                      'AgADAgADRKoxG1QCQUmlG28vrK8o_avCtw8ABAEAAwIAA20AA8v1AAIWBA'))
    send_photo(message.chat.id, drakken, reply_to_message_id=message.message_id)


def send_meme(message):
    """–ü—Ä–∏—Å—ã–ª–∞–µ—Ç –º–µ–º"""
    log.log_print(str(message.from_user.id)+": send_meme invoked")
    meme = choice(('AgADAgADx60xG2S_oUmVz41Dk8a4AkRNUw8ABAEAAwIAA20AAzj4BQABFgQ',
                   'AgADAgADdKsxG7PUsEmfWmu7wYQaSlHNuQ8ABAEAAwIAA20AA2gAAxYE',
                   'AgADAgAD-aoxG0EnIUqnHKx1l-EFFajiug8ABAEAAwIAA20AA3VUAAIWBA',
                   'AgADAgADY6sxG2RPyUmfTbFEJLvRV9Lhtw8ABAEAAwIAA20AA-lxAQABFgQ',
                   'AgADAgAD36sxG3h0uUlOXJnN-wooZiGxhQ8ABAEAAwIAA3gAA7nOAgABFgQ',
                   'AgADAgADJKsxG-KVuElBSmME_b_Cn8KghQ8ABAEAAwIAA20AA2DOAgABFgQ'))
    send_photo(message.chat.id, meme, reply_to_message_id=message.message_id)


def send_me(message):
    """–ü—Ä–∏—Å—ã–ª–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É –µ–≥–æ –∑–∞–ø–∏—Å—å –≤ –ë–î"""
    log.log_print(str(message.from_user.id)+": send_me invoked")
    database = Database()
    person = person_analyze(message, True)
    if person:  # TODO –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ person_analyze –≤ input.py
        database.change(person.username, person.id, set_column='username')
        database.change(person.first_name, person.id, set_column='nickname')
        person = database.get(person.id)
        if person:
            msg = 'ID: {}\n'.format(person[0])
            msg += '–Æ–∑–µ—Ä–Ω–µ–π–º: {}\n'.format(person[1])
            msg += '–ù–∏–∫–Ω–µ–π–º: {}\n'.format(person[2])
            msg += '–†–∞–Ω–≥: {}\n'.format(person[3])
            msg += '–ö–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {}\n'.format(person[4])
            msg += '–ö–æ–ª-–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {}\n'.format(person[5])
            msg += '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–±–ª–æ–º–∏–ª–∏–∞–Ω–æ–≤: {}\n'.format(person[6])
        else:
            msg = "–ù–µ –∑–Ω–∞—é, —á—ë —ç—Ç–æ —Ç–∞–∫–æ–µ —Ç—É—Ç —Å–∏–¥–∏—Ç"
        reply(message, msg)
    del database


def all_members(message):
    """–ü—Ä–∏—Å—ã–ª–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≤ –ë–î"""
    log.log_print("all_members invoked")
    database = Database()
    members = database.get_all('members', 'messages')
    if len(members) % 50 == 0:
        fiftys = len(members) // 50
    else:
        fiftys = len(members) // 50 + 1
    for fifty in range(fiftys):
        one_message_list = members[50*(fifty-1): 50*fifty]
        answer = ''
        for member in one_message_list:
            username = "[{}](tg://user?id={})".format(member[2].replace('[', '').replace(']', ''), member[0])
            answer += '`' + str(member[0]) + '` ' + username + '\n'
        sent = send(message.from_user.id, answer, parse_mode='Markdown')
    if sent:
        reply(message, "–í—ã—Å–ª–∞–ª –ë–î –≤ –ª–∏—á–∫—É")
    else:
        reply(message, "–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏ –º–µ–Ω—è –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö")


def money_give(message):
    """–§—É–Ω–∫—Ü–∏—è –æ–±–º–µ–Ω–∞ –¥–µ–Ω—å–≥–∞–º–∏ –º–µ–∂–¥—É –ª—é–¥—å–º–∏"""
    database = Database()
    getter = person_analyze(message, to_bot=True).id
    giver = message.from_user.id
    money = message.text.split()[-1]
    value_getter = database.get(getter)[6]
    value_giver = database.get(giver)[6]
    if not money.isdigit() and not (money[1:].isdigit() and money[0] == '-'):
        reply(message, "–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º, —Å–∫–æ–ª—å–∫–æ —è–±–ª–æ–º–∏–ª–∏–∞–Ω–æ–≤ –¥–∞—ë—Ç–µ")
    elif money[0] == '-':
        reply(message, "–ù–µ–ø–ª–æ—Ö–∞—è –ø–æ–ø—ã—Ç–∫–∞")
    else:
        money = int(money)
        if money > value_giver:
            reply(message, "–î–µ–Ω—å–∂–∞—Ç –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç")
        else:
            value_getter += money
            value_giver -= money
            reply(message, "#–§–∏–Ω–∞–Ω—Å—ã\n\nID {} [{} --> {}]\nID {} [{} --> {}]\n"
                  .format(getter, value_getter-money, value_getter, giver, value_giver+money, value_giver))
            admin_place = database.get("–ê–¥–º–∏–Ω–æ—Å–æ—Å—Ç–∞–≤", 'chats', 'purpose')[0]
            send(admin_place, "#–§–∏–Ω–∞–Ω—Å—ã\n\nID {} [{} --> {}]\nID {} [{} --> {}]\n"
                 .format(getter, value_getter-money, value_getter, giver, value_giver+money, value_giver))
    database.change(value_getter, getter, 'members', 'money', 'id')
    database.change(value_giver, giver, 'members', 'money', 'id')
    del database


def money_top(message):
    database = Database()
    bot_money = database.get(bot_id)[6]
    people = list(database.get_all("members", 'money'))
    not_poor_people = []
    for person in people:
        if person[6] != 0 and person[0] != bot_id:
            not_poor_people.append(person)
    i = 1
    text = "–ë—é–¥–∂–µ—Ç: {} üçé\n".format(bot_money)
    for person in not_poor_people:
        text += "\n{}. {} -- {} üçé".format(i, person[2], person[6])  # TODO –î–æ–±–∞–≤–∏—Ç—å —Å—é–¥–∞ –∫—Ä–∞—Å–∏–≤—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —á–µ–ª–∞
        i += 1
    reply(message, text)
    del database
