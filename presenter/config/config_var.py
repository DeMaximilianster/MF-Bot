# -*- coding: utf-8 -*-
"""Module with important constants"""
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from presenter.config.log import Logger, LOG_TO
from presenter.config.texts import JANUARY, FEBRUARY, MARCH, APRIL, MAY, \
    JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, NOVEMBER, DECEMBER

LOG = Logger(LOG_TO)

CREATOR_ID = 381279599

BOT_ID = 575704111

ENTITIES_TO_PARSE = {'bold', 'italic', 'underline', 'strikethrough', 'code', 'text_link'}

ORIGINAL_TO_ENGLISH = {'–†—É—Å—Å–∫–∏–π': 'Russian', 'English': 'English'}
ENGLISH_TO_ORIGINAL = {'Russian': '–†—É—Å—Å–∫–∏–π', 'English': 'English'}
MONTHS = [
    JANUARY, FEBRUARY, MARCH, APRIL, MAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, NOVEMBER, DECEMBER
]


def month_to_genitive(month: dict) -> dict:
    """Converts a month to genitive case"""
    if month['Russian'][-1] in ('–π', '—å'):
        nrm = month['Russian'][:-1].lower() + '—è'
        return {'Russian': nrm, 'English': month['English']}
    nrm = month['Russian'].lower() + '–∞'
    return {'Russian': nrm, 'English': month['English']}


def month_to_prepositional(month: dict) -> dict:
    """Converts a month to prepositional case"""
    if month['Russian'][-1] in ('–π', '—å'):
        nrm = month['Russian'][:-1].lower() + '–µ'
        return {'Russian': nrm, 'English': month['English']}
    nrm = month['Russian'].lower() + '–µ'
    return {'Russian': nrm, 'English': month['English']}


MONTHS_GENITIVE = [month_to_genitive(i) for i in MONTHS]
MONTHS_PREPOSITIONAL = [month_to_prepositional(i) for i in MONTHS]


def admin_place(message, database):
    """Finds the admin place of the system"""
    LOG.log_print("admin_place invoked")
    chat = database.get('chats', ('id', message.chat.id))
    system = chat['system']
    return database.get('systems', ('id', system))['admin_place']


def chat_list(database, system):
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ú–§2-—á–∞—Ç–æ–≤, –∫—Ä–æ–º–µ –ê–¥–º–∏–Ω–æ—Å–æ—Å—Ç–∞–≤–∞ –∏ –ö–æ–º–∏—Ç–µ—Ç–∞"""
    LOG.log_print("chat_list invoked")
    ch_list = database.get_many('chats', ('system', system))
    return ch_list


def full_chat_list(database, system):
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ú–§2-—á–∞—Ç–æ–≤"""
    LOG.log_print("full_chat_list invoked")
    return database.get_many('chats', ('system', system))


def channel_list(database):
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ú–§2-–∫–∞–Ω–∞–ª–æ–≤"""
    return database.get_all('channels')


# —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö content_types –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
ALL_CONTENT_TYPES = [
    'text', 'audio', 'document', 'photo', 'sticker', 'video', 'video_note', 'voice', 'location',
    'contact'
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞, –∏—Ä–æ–Ω–∏—á–Ω–æ –ª–∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è/–ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏
IRONIC_KEYBOARD = InlineKeyboardMarkup()
IRONIC_KEYBOARD.add(InlineKeyboardButton("–ò—Ä–æ–Ω–∏—á–Ω–æ", callback_data="ironic"))
IRONIC_KEYBOARD.add(InlineKeyboardButton("–ù–µ–∏—Ä–æ–Ω–∏—á–Ω–æ", callback_data="non_ironic"))
IRONIC_KEYBOARD.row_width = 1

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞—à–µ–∫
VOTE_KEYBOARD = InlineKeyboardMarkup()
VOTE_KEYBOARD.add(InlineKeyboardButton("–ó–∞", callback_data="favor"))
VOTE_KEYBOARD.add(InlineKeyboardButton("–ü—Ä–æ—Ç–∏–≤", callback_data="against"))
VOTE_KEYBOARD.add(InlineKeyboardButton("–í–æ–∑–¥–µ—Ä–∂–∏–≤–∞—é—Å—å", callback_data="abstain"))
VOTE_KEYBOARD.row_width = 1

# –¢–µ—Å—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∫–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–∂–∏–º–∞—é—Ç—Å—è
TEST_KEYBOARD = InlineKeyboardMarkup()
TEST_KEYBOARD.add(InlineKeyboardButton("–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ 1", callback_data="1"))
TEST_KEYBOARD.add(InlineKeyboardButton("–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ 2", callback_data="2"))
TEST_KEYBOARD.add(InlineKeyboardButton("–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ 3", callback_data="3"))
TEST_KEYBOARD.row_width = 1

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º—É–ª—å—Ç–∏-–≥–æ–ª–æ—Å–æ–≤–∞—à–∫–∏ –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–º/–Ω–µ–∞–¥–µ–∫–≤–∞—Ç–Ω—ã–º
ADEQUATE_KEYBOARD = InlineKeyboardMarkup()
ADEQUATE_KEYBOARD.add(InlineKeyboardButton("–ê–¥–µ–∫–≤–∞—Ç–Ω–æ", callback_data="adequate"))
ADEQUATE_KEYBOARD.add(InlineKeyboardButton("–ù–µ–∞–¥–µ–∫–≤–∞—Ç–Ω–æ", callback_data="inadequate"))
ADEQUATE_KEYBOARD.row_width = 1

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∞–¥–∞–ø—Ç-–≥–æ–ª–æ—Å–æ–≤–∞—à–∫–∏ –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–º/–Ω–µ–∞–¥–µ–∫–≤–∞—Ç–Ω—ã–º
ADAPT_ADEQUATE_KEYBOARD = InlineKeyboardMarkup()
ADAPT_ADEQUATE_KEYBOARD.add(InlineKeyboardButton("–ê–¥–µ–∫–≤–∞—Ç–Ω–æ", callback_data="a_adequate"))
ADAPT_ADEQUATE_KEYBOARD.add(InlineKeyboardButton("–ù–µ–∞–¥–µ–∫–≤–∞—Ç–Ω–æ", callback_data="inadequate"))
ADAPT_ADEQUATE_KEYBOARD.row_width = 1

ADD_CHAT_KEYBOARD = InlineKeyboardMarkup()
ADD_CHAT_KEYBOARD.add(InlineKeyboardButton("–ù–æ–≤—ã–π —á–∞—Ç", callback_data="new_chat"))
ADD_CHAT_KEYBOARD.add(InlineKeyboardButton("–ß–∞—Å—Ç—å –¥—Ä—É–≥–æ–≥–æ —á–∞—Ç–∞",
                                           callback_data="part_of_other_chat"))
ADD_CHAT_KEYBOARD.row_width = 1

FEATURES = ('standart_commands', 'erotic_commands', 'boss_commands', 'financial_commands',
            'mutual_invites', 'messages_count', 'violators_ban', 'admins_promote', 'moves_delete',
            'newbies_captched')
FEATURES_TEXTS = dict()
FEATURES_TEXTS['Russian'] = [
    '–†–∞–∑–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã', '–≠—Ä–æ—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã', '–ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã (/ban, /warn...)',
    '–î–µ–Ω–µ–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (/pay, /give, /fund)',
    '–°—Å—ã–ª–∫–∞ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è', '–°–æ–æ–±—â–µ–Ω–∏—è —Å—á–∏—Ç–∞—é—Ç—Å—è',
    '–ù–∞—Ä—É—à–∏—Ç–µ–ª–∏ –±–∞–Ω—è—Ç—Å—è –ø—Ä–∏ –≤—Ö–æ–¥–µ', '–ê–¥–º–∏–Ω—ã –ø–æ–ª—É—á–∞—é—Ç –∞–¥–º–∏–Ω–∫—É',
    '–°–æ–æ–±—â–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ –∏ –≤—ã—Ö–æ–¥–µ —É–¥–∞–ª—è—é—Ç—Å—è '
    '(–µ—Å–ª–∏ –≤–∫–ª, –∞ –∫–∞–ø—á–∞ –≤—ã–∫–ª, –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç –∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è)', '–ù–æ–≤–∏—á–∫–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç –∫–∞–ø—á—É'
]
FEATURES_TEXTS['English'] = [
    'Standart commands', 'Admin commands', 'Financial commands', 'Invites links',
    'Messages are count for citizenship', 'MF2 violators are automatically banned',
    'MF2 admins are automatically promoted'
]

FEATURES_ONERS = tuple(map(lambda x: x + '_on', FEATURES))
FEATURES_OFFERS = tuple(map(lambda x: x + '_off', FEATURES))
FEATURES_DEFAULTERS = tuple(map(lambda x: x + '_default', FEATURES))
SYSTEM_FEATURES_ONERS = tuple(map(lambda x: 's_' + x + '_on', FEATURES))
SYSTEM_FEATURES_OFFERS = tuple(map(lambda x: 's_' + x + '_off', FEATURES))

NEW_SYSTEM_JSON_ENTRY = {
    "name": "",
    "money": False,
    "money_emoji": "üí∞",
    "money_name": "–≤–∞–ª—é—Ç—ã",
    "ranks": ["–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–π", "–£—á–∞—Å—Ç–Ω–∏–∫", "–ê–¥–º–∏–Ω", "–°—Ç–∞—Ä—à–∏–π –ê–¥–º–∏–Ω", "–õ–∏–¥–µ—Ä"],
    "ranks_commands": [None, "/guest", "/admin", "/senior_admin", "/leader"],
    "appointments": [],
    "appointment_adders": [],
    "appointment_removers": [],
    "commands": {
        "standart": ["–£—á–∞—Å—Ç–Ω–∏–∫", "–õ–∏–¥–µ—Ä"],
        "advanced": ["–£—á–∞—Å—Ç–Ω–∏–∫", "–õ–∏–¥–µ—Ä"],
        "boss": ["–ê–¥–º–∏–Ω", "–õ–∏–¥–µ—Ä"],
        "uber": ["–°—Ç–∞—Ä—à–∏–π –ê–¥–º–∏–Ω", "–õ–∏–¥–µ—Ä"],
        "chat_changer": ["–ê–¥–º–∏–Ω", "–õ–∏–¥–µ—Ä"]
    },
    "greetings": {
        "standart": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}",
        "captcha": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}. –î–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –Ω–µ –±–æ—Ç, "
                   "–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ö–†–ï–í–ï–¢–ö–£ –∑–∞ 5 –º–∏–Ω—É—Ç",
        "admin": "–û, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–µ—Ä–∂–∏ –∞–¥–º–∏–Ω–∫—É",
        "full_admin": "–û, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–µ—Ä–∂–∏ –ø–æ–ª–Ω—É—é –∞–¥–º–∏–Ω–∫—É"
    }
}
