# -*- coding: utf-8 -*-
from presenter.config.database_lib import Database
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from presenter.config.files_paths import adapt_votes_file, multi_votes_file, votes_file
from view.output import *
from presenter.config.log import Loger, LOG_TO_CONSOLE
from presenter.config.config_var import superior_roles, admin_roles

log = Loger(LOG_TO_CONSOLE)


def person_analyze(message, to_self=False):
    if message.reply_to_message:  # –°–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º
        return message.reply_to_message.from_user
    elif len(message.text.split()) > 1:
        par = message.text.split()[1]
        try:
            if int(par) and len(str(par)) == 9:
                return get_member(-1001408293838, par).user
            else:
                reply(message, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. ID —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ 9 —Ü–∏—Ñ—Ä")
                return None
        except Exception as e:
            print(e)
            reply(message, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. ID —ç—Ç–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ. –õ–∏–±–æ —Ç–∞–∫–æ–≥–æ ID –Ω–∏ —É –∫–æ–≥–æ –Ω–µ—Ç")
            return None
    elif to_self:
        return message.from_user
    else:
        reply(message, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –µ–≥–æ ID")
        return None


def is_admin(message, superior=False):
    log.log_print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {0} –Ω–∞ –∞–¥–º–∏–Ω–∫—É".format(message.from_user.username))
    database = Database()
    rank = database.get(message.from_user.id)[3]  # –ü–æ–ª—É—á–∞–µ–º –µ–≥–æ –∑–≤–∞–Ω–∏–µ
    del database
    if superior:  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—ã—Ç—å –õ–∏–¥–µ—Ä–æ–º –∏–ª–∏ –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º
        if rank in superior_roles:
            return True
        else:
            reply(message, "–≠, –Ω–µ—Ç, —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –õ–∏–¥–µ—Ä–∞ –∏ –µ–≥–æ –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è")
            return False
    elif rank in admin_roles:
        return True
    else:
        reply(message, "–≠, –Ω–µ—Ç, —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤")
        return False


def cooldown(message):
    log.log_print("–í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è cooldown —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ {}:{}".format(message.from_user.id, message.text))
    database = Database()
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –∫–æ–º–∞–Ω–¥—ã
    if '–µ—Å—Ç—å –æ–¥–∏–Ω –º–µ–º' in message.text.lower():
        analyze = '/meme'
    else:
        analyze = message.text.split()[0]  # –ü–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ –≤ —Å—Ç—Ä–æ–∫–µ
        if '@' in analyze:
            analyze = analyze.split('@')[0]  # –£–±–∏—Ä–∞–µ–º —Å–æ–±–∞—á–∫—É –∏ —Ç–æ, —á—Ç–æ –ø–æ—Å–ª–µ –Ω–µ—ë
    cooldown_id = '{} {}'.format(message.from_user.id, analyze)
    command = database.get(cooldown_id, 'cooldown')
    if not command:  # –ß–µ–ª –≤–ø–µ—Ä–≤—ã–µ –ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–º–º–∞–Ω–¥–æ–π
        database.append((cooldown_id, message.date), 'cooldown')
        del database
        return True
    # –ß–µ–ª —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–∞–Ω–¥–æ–π
    time_passed = message.date - command[1]
    if time_passed < 60:  # –ö—É–ª–¥–∞—É–Ω –Ω–µ –ø—Ä–æ—à—ë–ª
        answer = "–í–æ—É, –ø—Ä–∏–¥–µ—Ä–∂–∏ –∫–æ–Ω–µ–π, –∫–æ–≤–±–æ–π. –¢—ã —Å–º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π —Ç–æ–ª—å–∫–æ "
        answer += "—á–µ—Ä–µ–∑ {} —Å–µ–∫—É–Ω–¥ ü§†".format(60 - time_passed)
        reply(message, answer)
        del database
        return False
    else:  # –ö—É–ª–¥–∞—É–Ω –ø—Ä–æ—à—ë–ª
        database.change(message.date, cooldown_id, 'cooldown', 'time')
        del database
        return True


def time_replace(seconds):
    seconds += 3*60*60
    minutes = seconds//60
    seconds %= 60
    hours = minutes//60
    minutes %= 60
    days = hours//60
    hours %= 24
    return days, hours, minutes, seconds


def error(message, e):
    """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –î—ç'–ú–∞–∫—Å–∏–º–∏–ª–∏–∞–Ω—Å—Ç–µ—Ä–∞ –æ–± –æ—à–∏–±–∫–µ, –Ω–µ –ø—Ä–∏–≤—ë–≤—à–µ–π –∫ –≤—ã–ª–µ—Ç—É"""
    send(381279599, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
    send(381279599, e)
    reply(message, "–£ –º–µ–Ω—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è –¥–µ—Ñ–µ–∫–∞—Ü–∏—è")
    print(e)


def in_mf(message, or_private=True):
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–ª –≤–Ω–µ —á–∞—Ç–æ–≤ –∏ –≤ –ª–∏—á–∫–µ"""
    database = Database()
    if database.get(message.chat.id, 'chats'):  # –ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –ú–§2
        counter(message)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —É—á—ë—Ç –≤ –ë–î
        return True
    elif message.chat.type == 'private':  # –ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –ª–∏—á–∫–µ
        if or_private:  # –ö–æ–º–∞–Ω–¥–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ª–∏—á–∫–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä /minet)
            return True
        else:  # –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ª–∏—á–∫–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä /ban)
            person = message.from_user
            send(381279599, "–ù–µ–∫—Ç–æ {} ({}) [{}] –ø–æ–ø—ã—Ç–∞–ªc—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É {} –≤ –ª–∏—á–∫–µ"
                            .format(person.first_name, person.username, person.id, message.text))
            reply(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –õ–°")
            return False
    text = "–ñ–∞–ª–∫–∏–µ –∑–∞–≤–∏—Å—Ç–Ω–∏–∫–∏ –∏–∑ —á–∞—Ç–∞ —Å ID {} –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º {}, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ {} (@{}) [{}] –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å –º–Ω–æ–π –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è"
    send(381279599, text.format(message.chat.id, message.chat.title, message.from_user.first_name,
                                message.from_user.username, message.from_user.id))
    reply(message, "–Ø —Ç—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—é. –ó–∞—Ç–æ —è —Ä–∞–±–æ—Ç–∞—é –≤ @MultiFandomRu")
    return False


def counter(message):
    """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —á–µ–ª–æ–º"""
    database = Database()
    if message.new_chat_members:
        person = message.new_chat_members[0]
    else:
        person = message.from_user
    if database.get(person.id) is None:  # –ù–µ—Ç —Ç–∞–∫–æ–π –∑–∞–ø–∏—Å–∏
        answer = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —á–∞—Ç! –ù–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–∫—É –∏ –≤ –±—É–¥—É—â–µ–º –ø–æ–ª—É—á–∏—à—å –¥–æ—Å—Ç—É–ø '
        answer += '–∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º. –ß–∏—Ç–∞–π –∑–∞–∫—Ä–µ–ø, –≤–µ–¥–∏ —Å–µ–±—è —Ö–æ—Ä–æ—à–æ, –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –≤—Ä–µ–º—è–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è!'
        reply(message, answer)
        try:
            person = (person.id, str(person.username), person.first_name, '–ì–æ—Å—Ç—å', 1, 0, 0)
            database.append(person)
        except Exception as e:
            error(message, e)
    elif message.chat.id == database.get('–ì–ª–∞–≤–Ω—ã–π —á–∞—Ç', 'chats', 'purpose')[0]:  # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–º —á–∞—Ç–µ
        value = database.get(person.id)[4] + 1
        database.change(value, person.id, 'members', 'messages', 'id')
    del database


# TODO –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ –≥–æ–ª–æ—Å–æ–≤–∞—à–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –µ—â—ë –∫—É–¥–∞-—Ç–æ (JSON)
def create_vote(vote_message):
    """–°–æ–∑–¥–∞—ë—Ç –≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É"""
    log.log_print("–°–æ–∑–¥–∞—ë–º –≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º: "+vote_message.text)
    # TODO –ü–∞—Ä–∞–º–µ—Ç—Ä purpose, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –≥–æ–ª–æ—Å–æ–≤–∞—à–∫–∏
    file = open(votes_file, 'r')
    votes_shelve = file.read()
    if votes_shelve:
        votes_shelve = eval(votes_shelve)
    else:
        votes_shelve = {}
    file.close()
    votes_shelve[vote_message.message_id] = {"time": vote_message.date, "text": vote_message.text,
                                             "favor": {}, "against": {}, "abstain": {}}
    file = open(votes_file, 'w')
    file.write(str(votes_shelve))
    file.close()


def create_multi_vote(vote_message):
    """–°–æ–∑–¥–∞—ë—Ç –º—É–ª—å—Ç–∏-–≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É"""
    log.log_print("–°–æ–∑–¥–∞—ë–º –º—É–ª—å—Ç–∏-–≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º: "+vote_message.text)
    keyboard = InlineKeyboardMarkup()
    url = 'https://t.me/multifandomrubot?start=new_option{}'.format(vote_message.message_id)
    keyboard.row_width = 1
    keyboard.add(InlineKeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç", url=url))
    file = open(multi_votes_file)
    votes_shelve = file.read()
    if votes_shelve:
        votes_shelve = eval(votes_shelve)
    else:
        votes_shelve = {}
    file.close()
    votes_shelve[vote_message.message_id] = {"text": vote_message.text, "votes": [], "keyboard": [],
                                             "chat": vote_message.chat.id}
    file = open(multi_votes_file, 'w')
    file.write(str(votes_shelve))
    file.close()
    edit_markup(vote_message.chat.id, vote_message.message_id, reply_markup=keyboard)


def create_adapt_vote(vote_message):
    """–°–æ–∑–¥–∞—ë—Ç –∞–¥–∞–ø—Ç-–≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É"""
    log.log_print("–°–æ–∑–¥–∞—ë–º –∞–¥–∞–ø—Ç-–≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º: "+vote_message.text)
    keyboard = InlineKeyboardMarkup()
    url = 'https://t.me/multifandomrubot?start=new_adapt_option{}'.format(vote_message.message_id)
    keyboard.row_width = 1
    keyboard.add(InlineKeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç", url=url))
    file = open(adapt_votes_file)
    votes_shelve = file.read()
    if votes_shelve:
        votes_shelve = eval(votes_shelve)
    else:
        votes_shelve = {}
    file.close()
    votes_shelve[vote_message.message_id] = {"text": vote_message.text, "votes": [], "keyboard": [],
                                             "chat": vote_message.chat.id}
    file = open(adapt_votes_file, 'w')
    file.write(str(votes_shelve))
    file.close()
    edit_markup(vote_message.chat.id, vote_message.message_id, reply_markup=keyboard)


def update_multi_vote(vote_id):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –º—É–ª—å—Ç–∏-–≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É"""
    log.log_print("–æ–±–Ω–æ–≤–ª—è–µ–º –º—É–ª—å—Ç–∏-–≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É —Å id: "+str(vote_id))
    file = open(multi_votes_file)
    votes_shelve = file.read()
    if votes_shelve:
        votes_shelve = eval(votes_shelve)
    else:
        votes_shelve = {}
    file.close()
    votey = dict(votes_shelve[vote_id])
    keyboard = InlineKeyboardMarkup()
    url = 'https://t.me/multifandomrubot?start=new_option{}'.format(vote_id)
    keyboard.row_width = 1
    keyboard.add(InlineKeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç", url=url))
    for i in votey['keyboard']:
        keyboard.add(InlineKeyboardButton(i, callback_data='mv_'+str(votey['keyboard'].index(i))))
    # –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≥–æ–ª–æ—Å–æ–≤–∞—à–∫–∏
    text = votey["text"]
    for i in votey['votes']:
        text += '\n{}: '.format(i[0]) + ', '.join(i[1].values())
    try:
        edit_text(text=text, chat_id=votey['chat'], message_id=vote_id, reply_markup=keyboard, parse_mode="Markdown")
    except Exception as e:
        print(e)


def update_adapt_vote(vote_id):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∞–¥–∞–ø—Ç –≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É"""
    log.log_print("–æ–±–Ω–æ–≤–ª—è–µ–º –∞–¥–∞–ø—Ç-–≥–æ–ª–æ—Å–æ–≤–∞—à–∫—É —Å id: "+str(vote_id))
    file = open(adapt_votes_file)
    votes_shelve = file.read()
    if votes_shelve:
        votes_shelve = eval(votes_shelve)
    else:
        votes_shelve = {}
    file.close()
    votey = dict(votes_shelve[vote_id])
    keyboard = InlineKeyboardMarkup()
    url = 'https://t.me/multifandomrubot?start=new_adapt_option{}'.format(vote_id)
    keyboard.row_width = 1
    keyboard.add(InlineKeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç", url=url))
    for i in votey['keyboard']:
        keyboard.add(InlineKeyboardButton(i, callback_data='av_'+str(votey['keyboard'].index(i))))
    # –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≥–æ–ª–æ—Å–æ–≤–∞—à–∫–∏
    text = votey["text"]
    for i in votey['votes']:
        text += '\n{}: '.format(i[0]) + ', '.join(i[1].values())
    try:
        edit_text(text=text, chat_id=votey['chat'], message_id=vote_id, reply_markup=keyboard, parse_mode="Markdown")
    except Exception as e:
        print(e)



